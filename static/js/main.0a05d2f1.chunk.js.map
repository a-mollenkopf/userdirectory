{"version":3,"sources":["components/Main/Main.jsx","App.js","index.js"],"names":["Table","state","search","sortAsc","employees","customData","sortEmployees","field","sortedEmployees","sort","a","b","setState","handleInputChange","e","target","name","value","handleFormSubmit","preventDefault","window","location","reload","filterEmployees","searchTerm","toLowerCase","filter","firstName","includes","lastName","userID","email","age","className","onSubmit","this","type","placeholder","onChange","scope","onClick","map","key","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+pEAuJeA,E,4MAlJbC,MAAQ,CACNC,OAAQ,GACRC,SAAS,EACTC,UAAWC,G,EAGbC,cAAgB,SAACC,GAcf,GAAI,EAAKN,MAAME,QAAS,CACtB,IAAMK,EAAkB,EAAKP,MAAMG,UAAUK,MAd/C,SAAoBC,EAAGC,GACrB,OAAID,EAAEH,GAASI,EAAEJ,GAAe,EAC5BI,EAAEJ,GAASG,EAAEH,IAAgB,EAE1B,KAWP,EAAKK,SAAS,CACZR,UAAWI,EACXL,SAAS,QAEN,CACL,IAAMK,EAAkB,EAAKP,MAAMG,UAAUK,MAb/C,SAAqBC,EAAGC,GACtB,OAAID,EAAEH,GAASI,EAAEJ,IAAgB,EAC7BI,EAAEJ,GAASG,EAAEH,GAAe,EAEzB,KAUP,EAAKK,SAAS,CACZR,UAAWI,EACXL,SAAS,M,EAKfU,kBAAoB,SAACC,GAAO,IAAD,EACDA,EAAEC,OAAlBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACd,EAAKL,SAAL,eACGI,EAAOC,K,EAIZC,iBAAmB,SAACJ,GAClBA,EAAEK,iBACuB,KAAtB,EAAKlB,MAAMC,QACZkB,OAAOC,SAASC,SAGlB,EAAKC,mB,EAGPA,gBAAkB,WAChB,IAAMC,EAAa,EAAKvB,MAAMC,OAAOuB,cACrC,EAAKb,SAAS,CACZR,UAAW,EAAKH,MAAMG,UAAUsB,QAC9B,SAACtB,GAAD,OACEA,EAAUuB,UAAUF,cAAcG,SAASJ,IAC3CpB,EAAUyB,SAASJ,cAAcG,SAASJ,IAC1CpB,EAAU0B,OAAOL,cAAcG,SAASJ,IACxCpB,EAAU2B,MAAMN,cAAcG,SAASJ,IACvCpB,EAAU4B,IAAIP,cAAcG,SAASJ,S,uDAKnC,IAAD,OACP,OACE,6BACE,yBAAKS,UAAU,UACb,uBAAGA,UAAU,qBAAb,kBACA,0BAAMA,UAAU,cAAcC,SAAUC,KAAKjB,kBAC3C,2BACEe,UAAU,eACVG,KAAK,SACLC,YAAY,iBACZrB,KAAK,SACLC,MAAOkB,KAAKlC,MAAMC,OAClBoC,SAAUH,KAAKtB,oBAEjB,4BAAQoB,UAAU,uBAAuBG,KAAK,UAA9C,YAKJ,2BAAOH,UAAU,SACf,2BAAOA,UAAU,SACf,4BACE,wBACEM,MAAM,MACNC,QAAS,WACP,EAAKlC,cAAc,eAGrB,4BAAQ2B,UAAU,wBAAlB,eAEF,wBACEM,MAAM,MACNC,QAAS,WACP,EAAKlC,cAAc,cAGrB,4BAAQ2B,UAAU,wBAAlB,cAEF,wBACEM,MAAM,MACNC,QAAS,WACP,EAAKlC,cAAc,YAGrB,4BAAQ2B,UAAU,wBAAlB,YAEF,wBACEM,MAAM,MACNC,QAAS,WACP,EAAKlC,cAAc,WAGrB,4BAAQ2B,UAAU,wBAAlB,UAEF,wBACEM,MAAM,MACNC,QAAS,WACP,EAAKlC,cAAc,SAGrB,4BAAQ2B,UAAU,wBAAlB,UAIN,+BACGE,KAAKlC,MAAMG,UAAUqC,KAAI,SAACrC,GAAD,OACxB,wBAAIsC,IAAKtC,EAAU0B,QACjB,4BAAK1B,EAAUuB,WACf,4BAAKvB,EAAUyB,UACf,4BAAKzB,EAAU0B,QACf,4BAAK1B,EAAU2B,OACf,4BAAK3B,EAAU4B,gB,GAzIXW,aCQLC,MARf,WACE,OACE,yBAAKX,UAAU,OACd,kBAAC,EAAD,Q,MCFLY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a05d2f1.chunk.js","sourcesContent":["import \"./Main.css\";\r\nimport React, { Component } from \"react\";\r\nimport customData from\"../customData.json\"\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    search: \"\",\r\n    sortAsc: true,\r\n    employees: customData,\r\n  };\r\n\r\n  sortEmployees = (field) => {\r\n    function compareAsc(a, b) {\r\n      if (a[field] > b[field]) return 1;\r\n      if (b[field] > a[field]) return -1;\r\n\r\n      return 0;\r\n    }\r\n\r\n    function compareDesc(a, b) {\r\n      if (a[field] > b[field]) return -1;\r\n      if (b[field] > a[field]) return 1;\r\n\r\n      return 0;\r\n    }\r\n    if (this.state.sortAsc) {\r\n      const sortedEmployees = this.state.employees.sort(compareAsc);\r\n      this.setState({\r\n        employees: sortedEmployees,\r\n        sortAsc: false,\r\n      });\r\n    } else {\r\n      const sortedEmployees = this.state.employees.sort(compareDesc);\r\n      this.setState({\r\n        employees: sortedEmployees,\r\n        sortAsc: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.state.search === \"\") {\r\n      window.location.reload();\r\n    }\r\n\r\n    this.filterEmployees();\r\n  };\r\n\r\n  filterEmployees = () => {\r\n    const searchTerm = this.state.search.toLowerCase();\r\n    this.setState({\r\n      employees: this.state.employees.filter(\r\n        (employees) =>\r\n          employees.firstName.toLowerCase().includes(searchTerm) ||\r\n          employees.lastName.toLowerCase().includes(searchTerm) ||\r\n          employees.userID.toLowerCase().includes(searchTerm) ||\r\n          employees.email.toLowerCase().includes(searchTerm) ||\r\n          employees.age.toLowerCase().includes(searchTerm)\r\n      ),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar\">\r\n          <a className=\"navbar-brand bold\">User Directory</a>\r\n          <form className=\"form-inline\" onSubmit={this.handleFormSubmit}>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"search\"\r\n              placeholder=\"Search by name\"\r\n              name=\"search\"\r\n              value={this.state.search}\r\n              onChange={this.handleInputChange}\r\n            ></input>\r\n            <button className=\"btn btn-outline-dark\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </nav>\r\n        <table className=\"table\">\r\n          <thead className=\"thead\">\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={() => {\r\n                  this.sortEmployees(\"firstName\");\r\n                }}\r\n              >\r\n                <button className=\"btn btn-outline-dark\">First name</button>\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={() => {\r\n                  this.sortEmployees(\"lastName\");\r\n                }}\r\n              >\r\n                <button className=\"btn btn-outline-dark\">Last name</button>\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={() => {\r\n                  this.sortEmployees(\"userID\");\r\n                }}\r\n              >\r\n                <button className=\"btn btn-outline-dark\">User ID</button>\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={() => {\r\n                  this.sortEmployees(\"email\");\r\n                }}\r\n              >\r\n                <button className=\"btn btn-outline-dark\">Email</button>\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={() => {\r\n                  this.sortEmployees(\"age\");\r\n                }}\r\n              >\r\n                <button className=\"btn btn-outline-dark\">Age</button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.employees.map((employees) => (\r\n              <tr key={employees.userID}>\r\n                <td>{employees.firstName}</td>\r\n                <td>{employees.lastName}</td>\r\n                <td>{employees.userID}</td>\r\n                <td>{employees.email}</td>\r\n                <td>{employees.age}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main/Main.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}